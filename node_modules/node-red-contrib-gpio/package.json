{
  "_from": "node-red-contrib-gpio",
  "_id": "node-red-contrib-gpio@0.14.0",
  "_inBundle": false,
  "_integrity": "sha512-yiOBKmRczVWTGnEe++udb3q24XjwCqfmmPASQb7rj2xk2XfnR5wqgLPvj8sR4qKWWWWIoniifvg3PVVIoXBPEg==",
  "_location": "/node-red-contrib-gpio",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "node-red-contrib-gpio",
    "fetchSpec": "latest",
    "name": "node-red-contrib-gpio",
    "raw": "node-red-contrib-gpio",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/node-red-contrib-gpio/-/node-red-contrib-gpio-0.14.0.tgz",
  "_shasum": "28547a98dfb6c5b26a0ab3a087ad28c95b0315ce",
  "_spec": "node-red-contrib-gpio",
  "_where": "/home/pi/Desktop/fisica/ale/raspirobot/jsmpeg",
  "author": {
    "name": "Luis Montes"
  },
  "bugs": {
    "url": "https://github.com/monteslu/node-red-contrib-gpio/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "firmata": "^0.19.1",
    "johnny-five": "^0.13.0",
    "lodash": "^4.17.5",
    "mqtt": "^2.15.2",
    "mqtt-serial": "^0.6.0",
    "node-led": "^0.3.1",
    "serialport": "^6.0.5",
    "socket.io-serial": "^0.4.0",
    "udp-serial": "^0.2.0"
  },
  "deprecated": false,
  "description": "A set of node-red nodes for using johnny-five and IO plugins",
  "devDependencies": {},
  "homepage": "https://github.com/monteslu/node-red-contrib-gpio",
  "keywords": [
    "arduino",
    "beaglebone",
    "ble",
    "ble-io",
    "bluetooth",
    "edison",
    "firmata",
    "galileo",
    "gpio",
    "io",
    "johnny-five",
    "mqtt",
    "node-red",
    "raspberry pi"
  ],
  "license": "MIT",
  "main": "gpio.js",
  "name": "node-red-contrib-gpio",
  "node-red": {
    "nodes": {
      "gpio": "gpio.js"
    }
  },
  "optionalDependencies": {},
  "readme": "node-red-contrib-gpio\n========================\n\n[![Join the chat at https://gitter.im/monteslu/node-red-contrib-gpio](https://badges.gitter.im/monteslu/node-red-contrib-gpio.svg)](https://gitter.im/monteslu/node-red-contrib-gpio?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nA set of input and output nodes for controlling General Purpose Input and Outputs (GPIOs) though the use of [johnny-five](https://github.com/rwaldron/johnny-five) [I/O Plugins](https://github.com/rwaldron/johnny-five/wiki/IO-Plugins) as well as running johnny-five scripts!\n\n## Install via NPM\n\nFrom inside your node-red directory:\n```\nnpm install node-red-contrib-gpio\n```\n\n## Control I/O for Analog, Digital, PWM and Servos\n\n![input output](in_out.png)\n\n## Also Read and Write to i2c devices\n![i2c](i2c.png)\n\nNode configuration\n* 14 is the length of bytes to read (1 byte = 8 bits)\n* i2c bytes is an array of bytes. You can't use inject node directly because data has to be inside an array.\n```\nmsg.payload=[0x00]\nreturn msg;\n```\n* i2c read and i2c write configure i2c connection. I2c and register are decimal values! parseInt(x, 10) function is used to read values.\n\n## Now with full Johnny-five support!\n\n![j5node](j5node.png)\n\n## Supported Hardware\n\nnode-red-contrib-gpio supports several johnny-five I/O classes:\n\n| Device | IO Plugin |\n|----------|-------------|\n|Arduino/Firmata|[firmata](https://github.com/jgautier/firmata)|\n|Raspberry Pi|[raspi-io](https://github.com/bryan-m-hughes/raspi-io)|\n|BeagleBone Black, Green, Pocket|[beaglebone-io](https://github.com/julianduque/beaglebone-io)|\n|C.H.I.P.|[chip-io](https://github.com/sandeepmistry/node-chip-io)|\n|Galileo/Edison|[galileo-io](https://github.com/rwaldron/galileo-io/)|\n|Blend Micro|[blend-micro-io](https://github.com/noopkat/blend-micro-io)|\n|LightBlue Bean|[bean-io](https://github.com/monteslu/bean-io/)|\n|ble-io(esp32, curie)|[ble-io](https://github.com/monteslu/ble-io/)|\n|Circuit Playground(classic)|[playground-io](https://github.com/rwaldron/playground-io)|\n|Electirc Imp|[imp-io](https://github.com/rwaldron/imp-io/)|\n|Particle(Spark) Core|[particle-io](https://github.com/rwaldron/particle-io/)|\n\n\nArduino is supported out of the box, but for other devices, you'll need to install their IO plugin.\n\nFor example to install the Raspberry Pi plugin:\n\n```\nnpm install raspi-io\n```\n\n\n## Remote Arduino Support\n\nIf you're using Arduino/Firmata, you can connect to a remote device via a raw tcp socket, or an MQTT connection.\n\nFor example, if you wanted to connect using tcp, in node-red you could specify an ip and port.  On another machine with an Arduino plugged in you could run a server that relays a tcp socket to a serial port such as: [tcpSerialRelay.js](https://gist.github.com/monteslu/b5ad4c46c9b6b78f7aea)\n\nIf you wanted to connect an Arduino to an MQTT server you can use a script such as: [bindSerialToMQTT.js](https://gist.github.com/monteslu/64372bcdff6f56458ec6).  In node-red you can connect to the same MQTT server and subscribe to the topic the arduino is publishing on, while publishing to the topic that the arduino is subscribed to.\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/monteslu/node-red-contrib-gpio.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.14.0"
}
